{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","useState","tasks","setTasks","editItem","setEditItem","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","onClick","TaskList","length","key","TaskForm","setTitle","useEffect","onSubmit","e","preventDefault","onChange","target","type","placeholder","required","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAGaA,EAAkBC,0BAmDhBC,EAjDiB,SAACC,GAAW,IAAD,EACfC,mBAAS,IADM,mBAClCC,EADkC,KAC3BC,EAD2B,OAGTF,mBAAS,MAHA,mBAGlCG,EAHkC,KAGxBC,EAHwB,KAgCzC,OACE,kBAACR,EAAgBS,SAAjB,CACEC,MAAO,CACLL,QACAM,QA/BU,SAACC,GACfN,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEO,QAAOC,GAAIC,mBA+B7BC,WA5Ba,SAACF,GAClBP,EAASD,EAAMW,QAAO,SAACC,GAAD,OAAUA,EAAKJ,KAAOA,OA4BxCK,UAzBY,WAChBZ,EAAS,KAyBLa,SAtBW,SAACN,GAChB,IAAMO,EAAOf,EAAMgB,MAAK,SAACJ,GAAD,OAAUA,EAAKJ,KAAOA,KAE9CL,EAAYY,IAoBRE,SAjBW,SAACV,EAAOC,GACvB,IAAMU,EAAWlB,EAAMmB,KAAI,SAACP,GAAD,OACzBA,EAAKJ,KAAOA,EAAK,CAAED,QAAOC,MAAOI,KAGnCX,EAASiB,GACTf,EAAY,OAYRD,aAGDJ,EAAMsB,WCzBEC,EArBF,SAAC,GAAc,IAAZT,EAAW,EAAXA,KAAW,EACQU,qBAAW3B,GAApCe,EADiB,EACjBA,WAAYI,EADK,EACLA,SAEpB,OACE,wBAAIS,UAAU,aACZ,8BAAOX,EAAKL,OACZ,6BACE,4BACEiB,QAAS,kBAAMd,EAAWE,EAAKJ,KAC/Be,UAAU,uBAEV,uBAAGA,UAAU,sBAEf,4BAAQC,QAAS,kBAAMV,EAASF,EAAKJ,KAAKe,UAAU,qBAClD,uBAAGA,UAAU,mBCIRE,EAjBE,WAAO,IACdzB,EAAUsB,qBAAW3B,GAArBK,MACR,OACE,6BACGA,EAAM0B,OACL,wBAAIH,UAAU,QACXvB,EAAMmB,KAAI,SAACP,GACV,OAAO,kBAAC,EAAD,CAAMA,KAAMA,EAAMe,IAAKf,EAAKJ,SAIvC,yBAAKe,UAAU,YAAf,4DCyCOK,EArDE,WAAO,IAAD,EAC8BN,qBACjD3B,GADMW,EADa,EACbA,QAASO,EADI,EACJA,UAAWX,EADP,EACOA,SAAUe,EADjB,EACiBA,SADjB,EAKKlB,mBAAS,IALd,mBAKdQ,EALc,KAKPsB,EALO,KA6BrB,OARAC,qBAAU,WAEND,EADE3B,EACOA,EAASK,MAET,MAEV,CAACL,IAGF,6BACE,0BAAM6B,SApBW,SAACC,GACpBA,EAAEC,iBACG/B,EAIHe,EAASV,EAAOL,EAASM,KAHzBF,EAAQC,GACRsB,EAAS,MAgBqBN,UAAU,QACtC,2BACEW,SA1Ba,SAACF,GACpBH,EAASG,EAAEG,OAAO9B,QA0BZA,MAAOE,EACP6B,KAAK,OACLb,UAAU,aACVc,YAAY,6CACZC,UAAQ,IAEV,yBAAKf,UAAU,WACb,4BAAQa,KAAK,SAASb,UAAU,oBAC7BrB,EAAW,eAAO,gBAErB,4BAAQsB,QAASX,EAAWU,UAAU,iBAAtC,0BCrCKgB,EARA,WACb,OACE,yBAAKhB,UAAU,UACb,8CCkBSiB,G,MAhBH,WACV,OACE,kBAAC,EAAD,KACE,yBAAKjB,UAAU,aACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,YCVZkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.f4ba39b9.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { v1 as uuid } from 'uuid';\n\nexport const TaskListContext = createContext();\n\nconst TaskListContextProvider = (props) => {\n  const [tasks, setTasks] = useState([]);\n\n  const [editItem, setEditItem] = useState(null);\n\n  const addTask = (title) => {\n    setTasks([...tasks, { title, id: uuid() }]);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const clearList = () => {\n    setTasks([]);\n  };\n\n  const findItem = (id) => {\n    const item = tasks.find((task) => task.id === id);\n\n    setEditItem(item);\n  };\n\n  const editTask = (title, id) => {\n    const newTasks = tasks.map((task) =>\n      task.id === id ? { title, id } : task\n    );\n\n    setTasks(newTasks);\n    setEditItem(null);\n  };\n\n  return (\n    <TaskListContext.Provider\n      value={{\n        tasks,\n        addTask,\n        removeTask,\n        clearList,\n        findItem,\n        editTask,\n        editItem,\n      }}\n    >\n      {props.children}\n    </TaskListContext.Provider>\n  );\n};\n\nexport default TaskListContextProvider;\n","import React, { useContext } from 'react';\nimport { TaskListContext } from '../context/TaskListContext';\n\nconst Task = ({ task }) => {\n  const { removeTask, findItem } = useContext(TaskListContext);\n\n  return (\n    <li className=\"list-item\">\n      <span>{task.title}</span>\n      <div>\n        <button\n          onClick={() => removeTask(task.id)}\n          className=\"btn-delete task-btn\"\n        >\n          <i className=\"fas fa-trash-alt\"></i>\n        </button>\n        <button onClick={() => findItem(task.id)} className=\"btn-edit task-btn\">\n          <i className=\"fas fa-pen\"></i>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default Task;\n","import React, { useContext } from 'react';\nimport { TaskListContext } from '../context/TaskListContext';\nimport Task from './Task';\n\nconst TaskList = () => {\n  const { tasks } = useContext(TaskListContext);\n  return (\n    <div>\n      {tasks.length ? (\n        <ul className=\"list\">\n          {tasks.map((task) => {\n            return <Task task={task} key={task.id} />;\n          })}\n        </ul>\n      ) : (\n        <div className=\"no-tasks\">やることがないです</div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { TaskListContext } from '../context/TaskListContext';\n\nconst TaskForm = () => {\n  const { addTask, clearList, editItem, editTask } = useContext(\n    TaskListContext\n  );\n\n  const [title, setTitle] = useState('');\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!editItem) {\n      addTask(title);\n      setTitle('');\n    } else {\n      editTask(title, editItem.id);\n    }\n  };\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title);\n    } else {\n      setTitle('');\n    }\n  }, [editItem]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <input\n          onChange={handleChange}\n          value={title}\n          type=\"text\"\n          className=\"task-input\"\n          placeholder=\"やることを記入\"\n          required\n        />\n        <div className=\"buttons\">\n          <button type=\"submit\" className=\"btn add-task-btn\">\n            {editItem ? '編集' : '追加'}\n          </button>\n          <button onClick={clearList} className=\"btn clear-btn\">\n            全削除\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TaskForm;\n","import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Task Manager</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport Header from './Header';\nimport TaskListProvider from '../context/TaskListContext';\nimport '../App.css';\n\nconst App = () => {\n  return (\n    <TaskListProvider>\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <div className=\"main\">\n            <TaskForm />\n            <TaskList />\n          </div>\n        </div>\n      </div>\n    </TaskListProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}